name: Build and Test

on:
  push:
    branches:
      - master
    paths:
      - 'dependency/**'
      - 'projects/**'
      - 'src/**'
  pull_request:
    branches:
      - master

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build
        run: |
          cd projects/CMake
          cmake -S . -B ./build_x86 -A Win32
          cmake -S . -B ./build_x86_64 -A x64
          cmake --build ./build_x86 --config Release
          cmake --build ./build_x86_64 --config Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: VorbisPluginWindowsArtifacts
          path: |
            out/Release/Plugins/Windows/x86/VorbisPlugin.dll
            out/Release/Plugins/Windows/x86_64/VorbisPlugin.dll

  build_android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: '3.25.2'

      - name: Set execution permissions for gradlew
        run: chmod +x projects/Android/gradlew

      - name: Build Gradle project
        run: |
          cd projects/Android
          ./gradlew assembleRelease
          tree ../../out

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: VorbisPluginAndroidArtifacts
          path: |
            out/RelWithDebInfo/Plugins/Android/arm64-v8a/libVorbisPlugin.so
            out/RelWithDebInfo/Plugins/Android/armeabi-v7a/libVorbisPlugin.so
            out/RelWithDebInfo/Plugins/Android/x86/libVorbisPlugin.so
            out/RelWithDebInfo/Plugins/Android/x86_64/libVorbisPlugin.so

  build_macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install CMake
        run: brew install cmake

      - name: Build
        run: |
          cd projects/CMake
          cmake -S . -B ./buildOSX -G Xcode -DVORBIS_OSX=1 -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"
          cmake --build ./buildOSX --config Release
          brew install tree
          tree ../../out

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: VorbisPluginMacOSArtifacts
          path: |
            out/Release/Plugins/Darwin/arm64/libVorbisPlugin.dylib

  build_ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install CMake
        run: brew install cmake

      - name: Build
        run: |
          cd projects/CMake
          cmake -S . -B ./buildIOS -G Xcode -DCMAKE_TOOLCHAIN_FILE=../../dependency/cmake-ios-toolchain/ios.toolchain.cmake -DPLATFORM=OS64 -DVORBIS_IOS=1
          cmake --build ./buildIOS --config Release --target VorbisPlugin
          brew install tree
          tree ../../out

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: VorbisPluginIOSArtifacts
          path: |
            out/Release/Plugins/iOS/aarch64/libVorbisPlugin.a

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install CMake
        run: sudo apt-get install cmake

      - name: Build
        run: |
          cd projects/CMake
          cmake -S . -B ./buildLinux -G "Unix Makefiles" -DVORBIS_LINUX=1
          cmake --build ./buildLinux --config Release
          tree ../../out

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: VorbisPluginLinuxArtifacts
          path: |
            out/Plugins/Linux/x86_64/libVorbisPlugin.so

  commit_and_push_native_libraries:
    needs: [build_windows, build_android, build_macos, build_ios, build_linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: dev
          submodules: recursive

      - name: Download artifacts windows
        uses: actions/download-artifact@v3
        with:
          name: VorbisPluginWindowsArtifacts
          path: out/Plugins/Windows

      - name: Download artifacts android
        uses: actions/download-artifact@v3
        with:
          name: VorbisPluginAndroidArtifacts
          path: out/Plugins/Android

      - name: Download artifacts macos
        uses: actions/download-artifact@v3
        with:
          name: VorbisPluginMacOSArtifacts
          path: out/Plugins/Darwin

      - name: Download artifacts ios
        uses: actions/download-artifact@v3
        with:
          name: VorbisPluginIOSArtifacts
          path: out/Plugins/iOS

      - name: Download artifacts linux
        uses: actions/download-artifact@v3
        with:
          name: VorbisPluginLinuxArtifacts
          path: out/Plugins/Linux

      - name: Commit and push native libraries
        env:
          MY_SECRET: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          cp -f out/Plugins/Windows/x86/VorbisPlugin.dll unity/VorbisUnity/Assets/VorbisPlugin/Plugins/Windows/x86/VorbisPlugin.dll
          cp -f out/Plugins/Windows/x86_64/VorbisPlugin.dll unity/VorbisUnity/Assets/VorbisPlugin/Plugins/Windows/x86_64/VorbisPlugin.dll
          cp -f out/Plugins/Android/arm64-v8a/libVorbisPlugin.so unity/VorbisUnity/Assets/VorbisPlugin/Plugins/Android/arm64-v8a/libVorbisPlugin.so
          cp -f out/Plugins/Android/armeabi-v7a/libVorbisPlugin.so unity/VorbisUnity/Assets/VorbisPlugin/Plugins/Android/armeabi-v7a/libVorbisPlugin.so
          cp -f out/Plugins/Android/x86/libVorbisPlugin.so unity/VorbisUnity/Assets/VorbisPlugin/Plugins/Android/x86/libVorbisPlugin.so
          cp -f out/Plugins/Android/x86_64/libVorbisPlugin.so unity/VorbisUnity/Assets/VorbisPlugin/Plugins/Android/x86_64/libVorbisPlugin.so
          cp -f out/Plugins/Darwin/libVorbisPlugin.dylib unity/VorbisUnity/Assets/VorbisPlugin/Plugins/OSX/libVorbisPlugin.dylib
          cp -f out/Plugins/iOS/libVorbisPlugin.a unity/VorbisUnity/Assets/VorbisPlugin/Plugins/iOS/libVorbisPlugin.a
          cp -f out/Plugins/Linux/libVorbisPlugin.so unity/VorbisUnity/Assets/VorbisPlugin/Plugins/Linux/x86_64/libVorbisPlugin.so
          git add .
          git status
          git config --global user.email "konstantin.gindemit@gmail.com"
          git config --global user.name "Konstantin Gindemit"
          git remote -v
          git commit --allow-empty -m "New native libraries version: 0.3.0-dev.${{ github.run_number }}"
          git tag -a 0.3.0-dev.${{ github.run_number }} -m "New native libraries version: 0.3.0-dev.${{ github.run_number }}"
          git config -l | grep 'http\..*\.extraheader' | cut -d= -f1 | xargs -L1 git config --unset-all
          echo "Trying to push..."
          git push --set-upstream https://token:$MY_SECRET@github.com/gindemit/unity-wrapper-vorbis.git
          git push --tags --set-upstream https://token:$MY_SECRET@github.com/gindemit/unity-wrapper-vorbis.git
